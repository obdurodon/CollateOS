<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.tei-c.org/ns/1.0"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="xs" version="2.0">
    <xsl:output method="xml" indent="yes"/>
    <xsl:template match="lacuna">
        <gap/>
    </xsl:template>
    <xsl:template match="sup">
        <hi rend="sup">
            <xsl:apply-templates/>
        </hi>
    </xsl:template>
    <xsl:template match="lb">
        <lb/>
    </xsl:template>
    <xsl:template match="/">
        <xsl:for-each-group select="//unit/*[name() = ('ch','n','r','z','b')]" group-by="name()">
            <xsl:variable name="title"
                select="concat(substring-before(tokenize(base-uri(/),'/')[last()],'.'),'-',current-grouping-key(),'.xml')"/>
            <xsl:result-document href="{$title}">
                <TEI>
                    <teiHeader>
                        <fileDesc>
                            <titleStmt>
                                <title>
                                    <xsl:sequence select="$title"/>
                                </title>
                            </titleStmt>
                            <publicationStmt>
                                <p>Generated by script from interlinear collation</p>
                            </publicationStmt>
                            <sourceDesc>
                                <p>See http://scholia.obdurodon.org</p>
                            </sourceDesc>
                        </fileDesc>
                    </teiHeader>
                    <text>
                        <body>
                            <div>
                                <p>
                                    <xsl:apply-templates select="current-group()"/>
                                </p>
                            </div>
                        </body>
                    </text>
                </TEI>
            </xsl:result-document>
        </xsl:for-each-group>
    </xsl:template>
    <xsl:template match="ch|n|r|z|b">
        <xsl:apply-templates/>
        <xsl:text> </xsl:text>
    </xsl:template>
</xsl:stylesheet>
